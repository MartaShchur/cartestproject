{"version":3,"file":"static/js/862.53be0327.chunk.js","mappings":"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","sources":["services/TmbdApi.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '3c075b4f44a375f4e9b142042cd51419';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};","import styled from '@emotion/styled';\n\nexport const GoBackLink = styled.span`\n  a {\n    position: relative;\n    padding-left: 12px;\n  }\n\n  a::before {\n    content: '';\n    display: block;\n\n    border-color: #ffc700;\n    border-style: solid;\n    border-width: 0 0 2px 2px;\n    height: 6px;\n    left: 0;\n    position: absolute;\n    width: 6px;\n    margin-top: -4px;\n    top: 50%;\n\n    transform: rotate(45deg);\n    -webkit-transform: rotate(45deg);\n  }\n\n  span {\n    color: #ffc700;\n  }\n\n  :hover,\n  :focus {\n    color: #ffc700;\n    a::before {\n      border-color: white;\n    }\n    span {\n      color: white;\n    }\n  }\n`;\n\nexport const FilmWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n\nexport const FilmImg = styled.img`\n  max-width: 182px;\n  background: #424242;\n  border-radius: 15px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 26px;\n  margin-bottom: 12px;\n`;\n\nexport const FilmSubTitle = styled.h3`\n  font-size: 16px;\n  margin-bottom: 6px;\n`;\n\nexport const FilmDescr = styled.p`\n  font-size: 16px;\n  color: #888888;\n  margin-bottom: 12px;\n`;\n\nexport const StyledListDescr = styled.ul`\n  font-size: 16px;\n  display: flex;\n  gap: 18px;\n  padding: 0;\n\n  border-radius: 20px;\n  color: #888888;\n  margin-bottom: 12px;\n`;\nexport const StyledList = styled.ul`\n  display: flex;\n  gap: 18px;\n  padding: 14px;\n\n  border-radius: 20px;\n`;\nexport const ListItem = styled.li`\n  span {\n    color: #ffc700;\n  }\n\n  a:hover,\n  a:focus,\n  a:active {\n    color: #ffc700;\n    span {\n      color: white;\n    }\n  }\n`;","import { Suspense, useEffect, useState } from 'react';\nimport {  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams, } from 'react-router-dom';\nimport {  getMovieById } from 'services/TmbdApi';\nimport {\n  FilmWrapper,\n  StyledList,\n  ListItem,\n  FilmImg,\n  FilmTitle,\n  FilmDescr,\n  GoBackLink,\n  FilmSubTitle,\n  StyledListDescr,\n} from './MovieDetails.styled';\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        const movieById = await getMovieById(movieId);\n        setMovie(movieById);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackLink>\n        <Link to={backLinkHref}>\n          Go back<span>.</span>\n        </Link>\n      </GoBackLink>\n      <FilmWrapper>\n        <FilmImg\n          src={`${\n            movie.poster_path\n              ? BASE_POSTER_URL + movie.poster_path\n              : PLACEHOLDER + '?text=' + movie.original_title\n          }`}\n          alt=\"get\"\n        />\n        <div>\n          <FilmTitle>{movie.original_title}</FilmTitle>\n          <FilmSubTitle>Rating: {Math.round(movie.vote_average)}</FilmSubTitle>\n          <FilmSubTitle>Overview</FilmSubTitle>\n          <FilmDescr>{movie.overview}</FilmDescr>\n          <FilmSubTitle>Genres</FilmSubTitle>\n          <StyledListDescr>\n            {movie.genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </StyledListDescr>\n        </div>\n      </FilmWrapper>\n      <div>\n        <h2>Additional information</h2>\n        <StyledList>\n          <ListItem>\n            <NavLink to=\"cast\" state={location.state}>\n              Cast<span>.</span>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"reviews\" state={location.state}>\n              Reviews<span>.</span>\n            </NavLink>\n          </ListItem>\n        </StyledList>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetails;"],"names":["axios","API_KEY","getMovieById","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee3","movieId","_yield$axios$get3","data","_context3","prev","next","concat","sent","abrupt","stop","_x2","apply","arguments","GoBackLink","styled","_templateObject","_taggedTemplateLiteral","FilmWrapper","_templateObject2","FilmImg","_templateObject3","FilmTitle","_templateObject4","FilmSubTitle","_templateObject5","FilmDescr","_templateObject6","StyledListDescr","_templateObject7","StyledList","_templateObject8","ListItem","_templateObject9","BASE_POSTER_URL","PLACEHOLDER","_location$state$from","_location$state","_movie$genres","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","fetchMovieById","_ref","_callee","movieById","_context","t0","console","log","_jsxs","_Fragment","children","_jsx","Link","to","src","poster_path","original_title","alt","Math","round","vote_average","overview","genres","map","genre","name","id","NavLink","Suspense","fallback","Outlet"],"sourceRoot":""}