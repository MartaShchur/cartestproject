{"version":3,"file":"static/js/153.00b33bcf.chunk.js","mappings":"+NAEaA,EAAUC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uMAYpBC,EAAcH,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+E,SCT/BG,EAAYC,SAASC,cAAc,eA0CzC,EAxCc,SAAHC,GAA0C,IAApCC,EAAaD,EAAbC,cAAeC,EAAIF,EAAJE,KAAMC,EAAOH,EAAPG,SACpCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACD,WAAfA,EAAMC,MACRJ,GAEJ,EAKA,OAHAK,OAAOC,iBAAiB,UAAWJ,GACnCP,SAASY,KAAKC,MAAMC,SAAW,SAExB,WACLJ,OAAOK,oBAAoB,UAAWR,GACtCP,SAASY,KAAKC,MAAMC,SAAW,SACjC,CACF,GAAG,CAACT,IASJ,OAAOW,EAAAA,EAAAA,eACLC,EAAAA,EAAAA,KAACxB,EAAO,CAACyB,QAPiB,SAAAV,GACtBA,EAAMW,gBAAkBX,EAAMY,QAChCf,GAEJ,EAGwCgB,UACpCJ,EAAAA,EAAAA,KAACpB,EAAW,CAAAwB,UACVJ,EAAAA,EAAAA,KAAA,OAAKK,IAAKnB,EAAeoB,IAAKnB,QAGlCL,EAEJ,C","sources":["components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ largeImageURL, tags, onClose }) => {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        onClose(); \n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown); \n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown); \n      document.body.style.overflow = 'visible';\n    };\n  }, [onClose]);\n\n  \n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose(); \n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>\n        <img src={largeImageURL} alt={tags} />\n      </ModalWindow>\n    </Overlay>,\n    modalRoot \n  );\n};\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;"],"names":["Overlay","styled","_templateObject","_taggedTemplateLiteral","ModalWindow","_templateObject2","modalRoot","document","querySelector","_ref","largeImageURL","tags","onClose","useEffect","handleKeyDown","event","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","_jsx","onClick","currentTarget","target","children","src","alt"],"sourceRoot":""}