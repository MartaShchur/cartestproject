{"version":3,"file":"static/js/849.e5682940.chunk.js","mappings":"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","sources":["components/CarsList/CarsList.styled.jsx","components/CarsList/CarsList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Cars/Cars.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 12px;\n`;\nexport const Item = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n\n  /* background-color: #2a2a2a; */\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n    background-color: #ffc700;\n    color: #111111;\n  }\n\n  a {\n    display: block;\n    /* padding: 16px 16px; */\n  }\n`;","import PropTypes from 'prop-types';\nimport { useLocation, Link } from 'react-router-dom';\nimport { List, Item } from './CarsList.styled';\n\nconst CarsList = ({ cars}) => {\n  const location = useLocation();\n  return (\n    <List>\n      {cars.map(({ id, original_title }) => (\n        <Item key={id}>\n          <Link state={{ from: location }} to={`/cars/${id}`}>\n            {original_title}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nCarsList.propTypes = {\n  cars: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default CarsList;","import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 10px 16px;\n\n  /* color:#2b2b2b; */\n\n  /* background: #2b2b2b; */\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: #2b2b2b;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  margin-left: 12px;\n  padding: 10px 16px;\n  border-radius: 10px;\n\n  :not(:disabled):active,\n  :focus,\n  :not(:disabled):hover {\n    color: #2b2b2b;\n  }\n`;","import { useState } from \"react\";\nimport { InputSearch, ButtonSearch } from './Form.styled';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </ButtonSearch>\n    </form>\n  );\n};\n\nexport default Form;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport FilmsList from 'components/CarsList/CarsList';\nimport Form from 'components/Form/Form';\nimport { getMovieByQuery } from 'services/TmbdApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (evt) {\n        console.log(evt);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '3c075b4f44a375f4e9b142042cd51419';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","cars","location","useLocation","_jsx","children","map","_ref2","id","original_title","Link","state","from","to","concat","InputSearch","ButtonSearch","setSearchParams","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","evt","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","movieByQuery","_context","prev","next","getMovieByQuery","sent","t0","console","log","stop","apply","arguments","_Fragment","Form","length","FilmsList","axios","API_KEY","_callee2","_yield$axios$get2","data","_context2","abrupt","results","_x","getMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2"],"sourceRoot":""}